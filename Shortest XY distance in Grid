//{ Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String S[] = read.readLine().split(" ");

            int N = Integer.parseInt(S[0]);
            int M = Integer.parseInt(S[1]);

            ArrayList<ArrayList<Character>> grid = new ArrayList<>();

            for (int i = 0; i < N; i++) {
                ArrayList<Character> col = new ArrayList<>();
                String S1[] = read.readLine().split(" ");
                for (int j = 0; j < M; j++) {
                    col.add(S1[j].charAt(0));
                }
                grid.add(col);
            }

            Solution ob = new Solution();
            System.out.println(ob.shortestXYDist(grid, N, M));
        }
    }
}
// } Driver Code Ends


// User function Template for Java

 class Solution {
    static class Point{
        int row;
        int col;
        public Point(int row,int col){
            this.row=row;
            this.col=col;
        }
    }
    static int shortestXYDist(ArrayList<ArrayList<Character>> grid, int N,
                              int M) {
        List<Point> xlist=new ArrayList<>();
        List<Point> ylist=new ArrayList<>();
        for(int i=0;i<N;i++){
            for(int j=0;j<M;j++){
                char c=grid.get(i).get(j);
                if(c=='X'){
                    xlist.add(new Point(i,j));
                }
                else if(c=='Y'){
                    ylist.add(new Point(i,j));
                }
            }
        }
        int min=Integer.MAX_VALUE;
        for(Point x:xlist){
            for(Point y:ylist){
                int dis=Math.abs(x.row-y.row)+Math.abs(x.col-y.col);
                if(dis<min){
                    min=dis;
                }
            }
        }
        return min;
    }
};
