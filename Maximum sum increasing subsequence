//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;
class GfG
{
    public static void main(String args[])
        {
            Scanner sc = new Scanner(System.in);
            int t = sc.nextInt();
            while(t-->0)
                {
                    int n = sc.nextInt();
                    int Arr[] = new int[n];
                    for(int i = 0;i<n;i++)
                        Arr[i] = sc.nextInt();
                    Solution ob = new Solution();
                    System.out.println(ob.maxSumIS(Arr,n));
                }
        }
}    
// } Driver Code Ends


//User function Template for Java

class Solution
{
	public int maxSumIS(int arr[], int n)  
	{   int[][] dp=new int[n+1][n+1];
	    for(int[] r:dp){
	        Arrays.fill(r,-1);
	    }
	    return solve(arr,n,0,-1,dp);
	}  
	public int solve(int[] arr,int n,int curr,int prev,int[][] dp){
	    if(curr==n){
	        return 0;
	    }
	    if(dp[curr][prev+1]!=-1)
	    {
	        return dp[curr][prev+1];
	    }
	    int take=0;
	    if(prev==-1 || arr[curr]>arr[prev]){
	        take=arr[curr]+solve(arr,n,curr+1,curr,dp);
	    }
	    int notake=solve(arr,n,curr+1,prev,dp);
	    return dp[curr][prev+1]=Math.max(take,notake);
	}
}
