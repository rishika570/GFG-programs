//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while (T-- > 0) {
			int n = sc.nextInt();
			int m = sc.nextInt();
			int[][] edge = new int[m][3];
			for (int i = 0; i < m; i++) {
				edge[i][0] = sc.nextInt();
				edge[i][1] = sc.nextInt();
				edge[i][2] = sc.nextInt();
			}
			Solution obj = new Solution();
			int res[] = obj.shortestPath(n, m,edge);
			for (int i = 0; i < n; i++) {
				System.out.print(res[i] + " ");
			}
			System.out.println();
		}
	}
}
// } Driver Code Ends


//User function Template for Java
class Solution {

	public int[] shortestPath(int N,int M, int[][] edges) {
		int[] dis=new int[N];
		Arrays.fill(dis,Integer.MAX_VALUE);
		dis[0]=0;
		for(int i=0;i<M;i++){
		    int src=edges[i][0];
		    int des=edges[i][1];
		    int w=edges[i][2];
		    if(dis[src]!=Integer.MAX_VALUE && dis[src]+w<dis[des]){
		        dis[des]=dis[src]+w;
		    }
		}
		for(int i=0;i<N;i++){
		    if(dis[i]==Integer.MAX_VALUE){
		        dis[i]=-1;
		    }
		}
		return dis;
	}
}
