//{ Driver Code Starts
import java.util.*;
import java.io.*;


// } Driver Code Ends

class Solution
{
    //Function to find the smallest positive number missing from the array.
    static int missingNumber(int arr[], int size)
    {
       Arrays.sort(arr);
       int r=-1;   //-4 -3 -2 -2 -1 0 1 1 2
       for(int i=0;i<size;i++){
           if(arr[i]>0){
               r=i;
               break;
           }
       }
       if(r==-1){
           return 1;
       }
       int n=1;
       while(r<size){
           if(arr[r]==n){
               n++;
           }
           else{
               if(n-1!=arr[r]){
                   return n;
               }
           }
           r++;
       }
       return n;
    }
}


//{ Driver Code Starts.

class Main
{   
    public static void main (String[] args) throws IOException
    {

		BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out=new PrintWriter(System.out);
		
        //taking testcases
		int t=Integer.parseInt(in.readLine().trim());
		while(t-->0){
		    
		    //input number n
			int n=Integer.parseInt(in.readLine().trim());
			int[] arr=new int[n];
			String s[]=in.readLine().trim().split(" ");
			
			//adding elements to the array
			for(int i=0;i<n;i++)
				arr[i]=Integer.parseInt(s[i]);
				
			Solution obj = new Solution();
			
			//calling missingNumber()
			int missing = obj.missingNumber(arr,n);
			out.println(missing);
		}
		out.close();
    }
}


// } Driver Code Ends
