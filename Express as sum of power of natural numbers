//{ Driver Code Starts
//Initial Template for Java
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String[] input = new String[2]; 
            input = br.readLine().split(" "); 
            int n = Integer.parseInt(input[0]); 
            int x = Integer.parseInt(input[1]); 
            Solution ob = new Solution();
            System.out.println(ob.numOfWays(n, x));
        }
    }
}

// } Driver Code Ends


//User function Template for Java
class Solution
{   static int mod=1000000007;
    static int numOfWays(int n, int x)
    {   int dp[][] =new int[n+1][n+1];
       for(int[] r:dp){
        Arrays.fill(r,-1);
       }
        return solve(n,x,1,dp);
    
    }
    static int solve(int n,int x,int i,int[][] dp){
        if(Math.pow(i,x)>n){
            return 0;
        }
        if(Math.pow(i,x)==n){
            return 1;
        }
        if(dp[i][n]!=-1){
            return dp[i][n];
        }
        int t=solve(n-(int)Math.pow(i,x),x,i+1,dp);
        int nt=solve(n,x,i+1,dp);
        return dp[i][n]=(t%mod+nt%mod)%mod;
    }
}
