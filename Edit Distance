//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while (T-- > 0) {
            String s1 = br.readLine();
            String[] S = s1.split(" ");
            String s = S[0];
            String t = S[1];
            Solution ob = new Solution();
            int ans = ob.editDistance(s, t);
            System.out.println(ans);
        }
    }
}

// } Driver Code Ends


class Solution {
    public int editDistance(String s, String t) {
        int l1=s.length();
        int l2=t.length();
        int dp[][]=new int[l1][l2];
        for(int r[]:dp){
            Arrays.fill(r,-1);
        }
        return solve(l1-1,l2-1,s,t,dp);
    }
    public int solve(int l1,int l2,String s,String t,int[][] dp){
        if(l1<0){
            return l2+1;
        }
        if(l2<0){
            return l1+1;
        }
        if(dp[l1][l2]!=-1){
            return dp[l1][l2];
        }
        if(s.charAt(l1)==t.charAt(l2))
            return dp[l1][l2]=solve(l1-1,l2-1,s,t,dp);
    
        int insert=solve(l1,l2-1,s,t,dp);
        int remove=solve(l1-1,l2,s,t,dp);
        int replace=solve(l1-1,l2-1,s,t,dp);
        return dp[l1][l2]=1+Math.min(insert,Math.min(remove,replace));
    }
}
