//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            String a[] = in.readLine().trim().split("\\s+");
            int arr[] = new int[N];
            for(int i = 0;i < N;i++)
                arr[i] = Integer.parseInt(a[i]);
            
            Solution ob = new Solution();
            List<Integer> ans = new ArrayList<Integer>();
            ans = ob.nextPermutation(N, arr);
            StringBuilder out = new StringBuilder();
            for(int i = 0;i < N;i++)
                out.append(ans.get(i) + " ");
            System.out.println(out);
        }
    }
}
// } Driver Code Ends


// User function Template for Java

class Solution{
    static List<Integer> nextPermutation(int N, int nums[]){
        int ind=0;
        int p=0;
        for(int i=N-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                ind=i;
            break;}
            }
        int q=0;
        for(int i=N-1;i>ind;i--){
            if(nums[i]>nums[ind]){
                q=i;
                break;}}
                int temp=nums[ind];
                nums[ind]=nums[q];
                nums[q]=temp;
        int low=0,high=0;
        if(ind==0 && q==0){
            low=0;
           high=N-1;
        }
        else{
       low=ind+1;
        high=N-1;}
        while(low<high){
            int temp1=nums[low];
            nums[low]=nums[high];
            nums[high]=temp1;
            low++;
            high--;
        }
       List<Integer> list=new ArrayList<>();
       for(int i=0;i<N;i++){
           list.add(nums[i]);
       }
       return list;
    }
}
