//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String s = br.readLine().trim();
            String []S = s.split(" ");
            int N = Integer.parseInt(S[0]);
            int start_x = Integer.parseInt(S[1]);
            int start_y = Integer.parseInt(S[2]);
            int step = Integer.parseInt(S[3]);
            Solution ob = new Solution();
            double ans = ob.findProb(N, start_x, start_y, step);
            System.out.println(String.format("%.6f", ans));           
        }
    }
}

// } Driver Code Ends


//User function Template for Java

class Solution
{
    public double findProb(int N, int start_x, int start_y, int k)
    {
        double[][][] dp=new double[N][N][k+1];
        for(double[][] a:dp){
            for(double[] r:a){
                for(int i=0;i<=k;i++){
                    r[i]=-1;
                }
            }
        }
        return solve(N,k,start_x,start_y,dp);
    }
    public double solve(int n,int k,int r,int c,double[][][] dp){
        if(r<0 || r>=n){
            return 0;
        }
        if(c<0 || c>=n){
            return 0;
        }
        if(k==0){
            dp[r][c][k]=1;
            return 1;
        }
        if(dp[r][c][k]!=-1){
            return dp[r][c][k];
        }
        double one=solve(n,k-1,r+1,c+2,dp)/8;
        double two=solve(n,k-1,r+1,c-2,dp)/8;
        double three=solve(n,k-1,r-1,c+2,dp)/8;
        double four=solve(n,k-1,r-1,c-2,dp)/8;
        double five=solve(n,k-1,r+2,c+1,dp)/8;
        double six=solve(n,k-1,r+2,c-1,dp)/8;
        double seven=solve(n,k-1,r-2,c+1,dp)/8;
        double eight=solve(n,k-1,r-2,c-1,dp)/8;
        return dp[r][c][k]=(one+two+three+four+five+six+seven+eight);
    }
}
