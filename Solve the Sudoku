//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.io.*;
import java.lang.*;

class Driver_class
{
    public static void main(String args[])
    {
        
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            int grid[][] = new int[9][9];
            for(int i = 0; i < 9; i++)
            {
                for(int j = 0; j < 9; j++)
                grid[i][j] = sc.nextInt();
            }
            
            Solution ob = new Solution();
            
            if(ob.SolveSudoku(grid) == true)
                ob.printGrid(grid);
            else
                System.out.print("NO solution exists");
            System.out.println();
            
        }
    }
}




// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to find a solved Sudoku. 
    static boolean SolveSudoku(int grid[][])
    {
        return solve(grid,0,0);
    }
    public static boolean solve(int[][] grid,int row,int col){
        if(row==9){
            return true;
        }
        if(col==9){
            return solve(grid,row+1,0);
        }
        if(grid[row][col]!=0){
            return solve(grid,row,col+1);
        }
        for(int i=1;i<=9;i++){
            if(check(grid,row,col,i)==true){
                grid[row][col]=i;
                if(solve(grid,row,col+1)){
                    return true;
                }
                
            }
            grid[row][col]=0;
        }
        return false;
    }
    public static boolean check(int[][] grid,int row,int col,int num){
        //row
        for(int i=0;i<9;i++){
            if(grid[i][col]==num){
                return false;
            }
        }
        //col
        for(int i=0;i<9;i++){
            if(grid[row][i]==num){
                return false;
            }
        }
        //box
        int newi=row-row%3;
        int newj=col-col%3;
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                if(grid[i+newi][j+newj]==num){
                    return false;
                }
            }
        }
        return true;
    }
    
    //Function to print grids of the Sudoku.
    static void printGrid (int grid[][])
    {
      for(int i=0;i<9;i++){
          for(int j=0;j<9;j++){
              System.out.print(grid[i][j]+" ");
          }
      }
    }
}
