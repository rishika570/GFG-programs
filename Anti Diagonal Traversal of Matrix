//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            int n = Integer.parseInt(br.readLine().trim());
            
            String input_line[] = br.readLine().trim().split("\\s+");
            int[][] matrix = new int[n][n];
            for(int i=0; i<n; i++) {
                for (int j = 0; j < n; ++j) {
                    matrix[i][j] = Integer.parseInt(input_line[i * n + j]); 
                }
            }
            Solution obj = new Solution();
            int[] ans = obj.antiDiagonalPattern(matrix);
            for(int i = 0; i < ans.length; i++)
                System.out.print(ans[i] + " ");
            System.out.println();
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution
{
    public int[] antiDiagonalPattern(int[][] matrix)
    {   int n=matrix.length;
        ArrayList<Integer> list=new ArrayList<>();
        int left=0,right=n-1,top=1,bottom=n-1;
        while(left<=right){
            list.add(matrix[0][left]);
            solve(list,matrix,n,0,left);
            left++;
        }
        while(top<=bottom){
            list.add(matrix[top][n-1]);
            solve(list,matrix,n,top,n-1);
            top++;
        }
        int[] res=new int[list.size()];
        for(int i=0;i<list.size();i++){
          res[i]=list.get(i);  
        }
        return res;
    }
    public void solve(ArrayList<Integer> list,int[][]mat,int n,int r,int c){
        if((r+1)<n && (r+1)>=0 && (c-1)<n && (c-1)>=0){
            list.add(mat[r+1][c-1]);
            solve(list,mat,n,r+1,c-1);
        }
    }
}
